A: THE RULES OF A BANKOCARD

1. 3 rows 9 columns
2. Column 1: (1..9) | Column 2: (10..19) | Column 3: (20..29) | Column 4: (30..39) | Column 5: (40..49) | Column 6: (50..59) | Column 7: (60..69) | Column 8: (70..79) | Column 9: (80..90)
3. Column 9 goes to 90 
4. Each row should contain 5 numbers and placed in column value-group (fx. 23 is placed in column 3 and 46 in column 5)
5. There's 15 numbers in total on each bankocard
6. Minimum 1 number in each column and max 3
7. Each column should be sorted from lowest to highest number if there's more than 1 number in the column
8. No number is displayed twice on bankocard

B: BANKOCARD0 INPUTFIELDS

1. Create container with 3x9 inputs (27 inputs)
2. Create grid .bankoCard0 in CSS to ensure 3 rows 9 columns grid and give input class div "bankoCard0"
3. Give bankocard0 unique id = bc0 + row and column indentifyer r0c0(input1), r0c1(input2) etc.
4. Test that input fields are working

C: CREATE GLOBAL VARIABLES

1. Create let randomNumbersArray0, randomNumbersArray1 and randomNumbersArray2 in global scope so it can be accessed by multiple functions
2. Create let bankocard in global scope

D: BANKO FUNCTION

1. Define bankocard with id of bankoRow0 = "bc0"
2. Run functions bankoRow0, bankoRow1, bankoRow2 and sortAllColumns
3. When all function has been run in bc0, set bankocard id to bankRow1 = "bc1"
4. When all functions has been run in bc1, set id of bankocard to bankoRow2 = "bc2" and run all function

E: BANKO-ROW 0

1. Make function bankorow0
2. Create do while loop that keeps looping the entire function until there's only 4 empty fields in row 0
3. Start function by clearing all inputs with an empty string
4. Define randomNumbersArray0 as an empty array
5. Create for loop from 0 to 5
6. Create let randomNumber
7. 