A: THE RULES OF A BANKOCARD

1. 3 rows 9 columns
2. Column 1: (1..9) | Column 2: (10..19) | Column 3: (20..29) | Column 4: (30..39) | Column 5: (40..49) | Column 6: (50..59) | Column 7: (60..69) | Column 8: (70..79) | Column 9: (80..90)
3. Column 9 goes to 90 
4. Each row should contain 5 numbers and placed in column value-group (fx. 23 is placed in column 3 and 46 in column 5)
5. There's 15 numbers in total on each bankocard
6. Minimum 1 number in each column and max 3
7. Each column should be sorted from lowest to highest number if there's more than 1 number in the column
8. No number is displayed twice on bankocard

B: BANKOCARD0 INPUTFIELDS

1. Create container with 3x9 inputs (27 inputs)
2. Create grid .bankoCard0 in CSS to ensure 3 rows 9 columns grid and give input class div "bankoCard0"
3. Give bankocard0 unique id = bc0 + row and column indentifyer r0c0(input1), r0c1(input2) etc.
4. Test that input fields are working

C: CREATE GLOBAL VARIABLES

1. Create let randomNumbersArray0, randomNumbersArray1 and randomNumbersArray2 in global scope so it can be accessed by multiple functions
2. Create let bankocard in global scope

D: BANKO FUNCTION

1. Define bankocard with id of bankoRow0 = "bc0"
2. Run functions bankoRow0, bankoRow1, bankoRow2 and sortAllColumns
3. When all function has been run in bc0, set bankocard id to bankRow1 = "bc1"
4. When all functions has been run in bc1, set id of bankocard to bankoRow2 = "bc2" and run all function

E: BANKO-ROW 0

1. Make function bankorow0
2. Create do while loop that keeps looping the entire function until there's only 4 empty fields in row 0 (parameter)
3. Start function by clearing all inputs with an empty string
4. Define randomNumbersArray0 as an empty array
5. Create for loop from 0 to 5 {
6. Create let randomNumber
7. Do-while loop that keeps looping until we have 5 unique numbers from 1..90
8. Push the the 5 unique numbers into randomNumbersArray0 }
9. Create for loop that loops from 0 to 5 {
10. Create a loop in loop that from 0-9
11. Define low and high value (fx round 0 low is 0 and high is 9, round 1 low is 10 and high is 19)
12. Make if statement to ensure that 90 is included in last column
13. Make if statement that places the 5 numbers in randomNumbersArray0 in the correct column based on its value }


F: BANKO-ROW 1

1. Make function bankoRow1
2. Repeat step E2 but change countEmptyFields parameter to 1 for new row
3. Repeat step E3, but change id to "r1c"
4. Define randomNumbersArray1 as an empty array
5. Repeat step E5
6. Repeat step E6
7. Repeat step E7, but this time run do-while loop until randomNumbersArray0 or randomNumbersArray1 both are false
8. Push the 5 random numbers into randomNumbersArray1
9. Repeat step E9
10. Repeat step E10
11. Repeat step E11
12. Repeat step E12
13. Repeat step 13 but use randomNumbersArray1 and "r1c"

G: Bank-Row 3

1. Do-while loop that runs until there's more than 0 numbers in column
2. Nearly identical with E and F steps, but with randomNumbersArray2 and "r2c" naming
3. Change countEmptyFields parameter to 2
4. In step E7 run do-while loop until randomNumbersArray0 OR randomNumbersArray1 OR randomNumbersArray2 all are false
5. 


H: 