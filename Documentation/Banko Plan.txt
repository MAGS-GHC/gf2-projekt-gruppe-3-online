A: THE RULES OF A BANKOCARD

1. 3 rows 9 columns
2. Column 0: (1..9) | Column 1: (10..19) | Column 2: (20..29) | Column 3: (30..39) | Column 4: (40..49) | Column 5: (50..59) | Column 6: (60..69) | Column 7: (70..79) | Column 8: (80..90)
3. Column 8 goes to 90
4. Each row should contain 5 numbers and placed in column value-group (fx. 23 is placed in column 3 and 46 in column 5)
5. There's 15 numbers in total on each bankocard
6. Minimum 1 number in each column 
7. Each column should be sorted from lowest to highest number if there's more than 1 number in the column
8. No number is displayed twice on a bankocard

B: BANKOCARD 0 INPUTFIELDS

1. Create container with 3x9 inputs (27 inputs)
2. Create grid .bankoCard0 in CSS to ensure 3 rows 9 columns grid and give input class div "bankoCard0"
3. Give bankocard0 unique id = bc0 + row and column indentifyer r0c0(input1), r0c1(input2) etc.
4. Test that input fields are working

C: CREATE GLOBAL VARIABLES

1. Create let randomNumbersArray0, randomNumbersArray1 and randomNumbersArray2 in global scope so it can be accessed by multiple functions
2. Create let bankocard in global scope

D: BANKO FUNCTION

1. Define bankocard with id
2. Run functions bankoRow0, bankoRow1, bankoRow2 and sortAllColumns
3. When all function has been run in bc0, set bankocard id to bankRow1 = "bc1"
4. When all functions has been run in bc1, set id of bankocard to bankoRow2 = "bc2" and run all function

E: BANKO-ROW 0

1. Make function bankorow0
2. Create do-while loop that keeps looping the entire function until there's 5 numbers in row
3.  Clear currenct bankocard r0c0..r0c8 container inputs with an empty string 
4.  Declare randomNumbersArray0 as an empty array
5.  Create for loop from 0 to 4
6.      Do-while loop that keeps looping until we have 1 unique number from 1..90 compared to numbers in randomNumbersArray0
7.      Push the unique numbers into randomNumbersArray0  
8.  Create for loop that loops from 0 to 4 
9.      Create a loop from that loops from 0 to 8
10.     Define low and high value (ex. round 0 low is 0 and high is 9, round 1 low is 10 and high is 19)
11.     Make if statement to ensure that 90 is included in last column
12.     Make if statement that places the number in container inputs current bankocard r0c0..r0c8 in the correct column based on its value 


F: BANKO-ROW 1

1! Make function bankorow1
2. Create do-while loop that keeps looping the entire function until there's 5 numbers in row
3!  Clear currenct bankocard r1c0..r1c8 container inputs with an empty string 
4.  Define randomNumbersArray1 as an empty array
5.  Create for loop from 0 to 4
6!      Do-while loop that keeps looping until we have 1 unique number from 1..90 compared to numbers in randomNumbersArray0 or randomNumbersArray1
7!      Push the unique numbers into randomNumbersArray1 
8.  Create for loop that loops from 0 to 4 
9.      Create a loop from that loops from 0 to 8
10.     Define low and high value (ex. round 0 low is 0 and high is 9, round 1 low is 10 and high is 19)
11.     Make if statement to ensure that 90 is included in last column
12!     Make if statement that places the number in container inputs current bankocard r1c0..r1c8 in the correct column based on its value

G: BANKO-ROW 3

1! Make function bankorow1
2! Create do-while loop keeps looping until no column is empty
3.  Create do-while loop that keeps looping the entire function until there's 5 numbers in row
4!      Clear currenct bankocard r2c0..r2c8 container inputs with an empty string 
5!      Define randomNumbersArray2 as an empty array
6.      Create for loop from 0 to 4
7!          Do-while loop that keeps looping until we have 1 unique number from 1..90 compared to numbers in randomNumbersArray0 or randomNumbersArray1 or randomNumbersArray2
8!          Push the unique numbers into randomNumbersArray2  
9.      Create for loop that loops from 0 to 4 
10.         Create a loop from that loops from 0 to 8
11.         Define low and high value (ex. round 0 low is 0 and high is 9, round 1 low is 10 and high is 19)
12.         Make if statement to ensure that 90 is included in last column
13!         Make if statement that places the number in container inputs current bankocard r2c0..r2c8 in the correct column based on its value

H: COUNT EMPTY FIELDS IN ROW

1. Create Functions CountEmptyFields with parameter row
2. Create variable emptyfilecount and set to 0 to clear function
3. Define elementId
4. Define fieldValue
5. Create loop from 0..8
6. Set elementId to current bankocard and row and column we are checking
7. FieldValue is set to the value in container input
8. If fieldValue is an empty string emptyFieldCount count one up
9. Return the emptyFieldCount function to be the value of empty fields.


I: COUNT EMPTY FIELDS IN ONE COLUMN

1. Create function CountEmptyFieldsOneColumn with parameter col
2. Create variable EmptyFieldCount and define to 0
3. Define elementId and fieldValue
4. Make loop from 0..2
5. Set elementId to current bankocard and row and column
6. Set fieldValue to the value of the specific field 
7. If the fieldvalue is an empty string count emptyFieldCount one up
8. The function returns with the value of emptyFieldCount

J: COUNT TOTAL EMPTY COLUMNS

1. Create function CheckEmptyColumns
2. Define columnError to 0
3. Create loop from 0..8
4. Make if statement that counts up columnErrors by one each time there's more than 2 empty fields in a column
5. The Function returns with the value of columnError 


K: SORT ONE COLUMN

1. Create function sortColumn with parameter col
2. define arrayColumn as an empty array
3. Point elementId to the bankocard, r0c + col
4. Insert container input r0c + col in arrayColumn[0]
5. repeat for r1c + col and insert in arrayColumn[1]
6. repeat for r2c + col and insert in arrayColumn[2]
7. Define emptyFieldCount to 0
8  Loop from 0..2
9. If arrayColumn on [i] place is an empty string count emptyFieldCount up by one


L: IF THERE'S NO EMPTY PLACES IN COLUMN
1. Sort numbers


M: HOW TO SORT IF THERE'S 1 EMPT FIELD

1. If column 0 (first place) is empty and column 1 (Mid) is bigger than column 2 (last place) change column 1 and 2 around
2. If column 1 (mid) is empty and column 0 (first place) is bigger than column 2(last place) change column 0 and 2 around
3. If Column 2 (Last place) is empty and column 0 (first place) is bigger than Column 1(Mid) Change column 0 and 1 around 

N:

1. 